openapi: "3.0.0"

paths:
  /private/verify-deprecated:
    post:
      deprecated: false
      description: |
        Sends provided files for verification
      tags:
        - Private
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
                - chain
                - files
              properties:
                address:
                  type: string
                  format: address
                  example: "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                chain:
                  type: string
                  example: "1"
                files:
                  type: object
                  example:
                    metadata.json: "{...}"
                    SimpleStorage.sol: "// file"
                creatorTxHash:
                  type: string
                chosenContract:
                  type: string
                match:
                  type: string
      responses:
        "200":
          description: The contract has been successfully checked or sourcified
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        chainId:
                          type: string
                        status:
                          type: string
                        message:
                          type: string
                        libraryMap:
                          type: object
              examples:
                Perfect Match:
                  value:
                    result:
                      - address: "0x123f681646d4a755815f9cb19e1acc8565a0c2ac"
                        chainId: "1"
                        status: "perfect"
                        libraryMap:
                          lib1: "0x3f681646d4a755815f9cb19e1acc8565a0c2ac"
                          lib2: "0x4f681646d4a755815f9cb19e1acc8565a0c2ac"
                Partial Match:
                  value:
                    result:
                      - address: "0x123f681646d4a755815f9cb19e1acc8565a0c2ac"
                        chainId: "1"
                        status: "partial"
                        libraryMap:
                          lib1: "0x3f681646d4a755815f9cb19e1acc8565a0c2ac"
                          lib2: "0x4f681646d4a755815f9cb19e1acc8565a0c2ac"
                Not Deployed:
                  value:
                    result:
                      - address: "0x123f681646d4a755815f9cb19e1acc8565a0c2ac"
                        chainId: "1"
                        status: "null"
                        message: "Chain #1 does not have a contract deployed at 0x...."
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Metadata not found:
                  value:
                    error: 'Metadata file not found. Did you include "metadata.json"?'
                Bad Formatted Json:
                  value:
                    error: "Unexpected token ' in JSON at position 107"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                File Not Found:
                  value:
                    error: "Couldn't extract files from the request. Please make sure you have added files"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Resource Missing:
                  value:
                    error: "Resource missing; unsuccessful fetching: contracts/SingleFile.sol"
                Deployed and recompiled mismatch:
                  value:
                    error: "The deployed and recompiled bytecode don't match."
  /private/replace-contract:
    post:
      deprecated: false
      description: |
        Replaces an existing contract in the database, addressing issues with misaligned or incorrect contract data.
        This endpoint provides a generic, maintainable solution and optimizes performance by optionally skipping 
        recompilation and on-chain RPC calls, using data already stored in the database.
      tags:
        - Private
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - chainId
                - address
                - transactionHash
                - forceCompilation
                - forceRPCRequest
              properties:
                chainId:
                  oneOf:
                    - type: string
                      format: supported-chainId
                    - type: number
                  description: The chain ID of the contract
                  example: "1"
                address:
                  type: string
                  format: address
                  description: The contract address
                  example: "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                transactionHash:
                  type: string
                  description: The creation transaction hash
                  example: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                forceCompilation:
                  type: boolean
                  description: If true, recompiles the contract using the provided jsonInput, compilerVersion and compilationTarget
                  example: false
                forceRPCRequest:
                  type: boolean
                  description: If true, fetches the contract's information from the RPC
                  example: false
                jsonInput:
                  type: object
                  description: Required if forceCompilation is true. The JSON input to use for recompilation
                compilerVersion:
                  type: string
                  description: Required if forceCompilation is true. The compiler version to use for recompilation
                  example: "0.8.19+commit.7dd6d404"
                compilationTarget:
                  type: object
                  description: Required if forceCompilation is true. The compilation target to use for recompilation
                  example:
                    { name: "Storage", path: "project:/contracts/Storage.sol" }
      responses:
        "200":
          description: The contract has been successfully replaced.
          content:
            application/json:
              schema:
                type: object
                properties:
                  replaced:
                    type: boolean
                  address:
                    type: string
                  chainId:
                    oneOf:
                      - type: string
                        format: supported-chainId
                      - type: number
                  transactionHash:
                    type: string
                  newStatus:
                    type: object
                    properties:
                      creationMatch:
                        type: string
                      runtimeMatch:
                        type: string
              examples:
                Success:
                  value:
                    replaced: true
                    address: "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                    chainId: "1"
                    transactionHash: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                    newStatus:
                      creationMatch: "perfect"
                      runtimeMatch: "perfect"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Missing Parameters:
                  value:
                    error: "jsonInput, compilerVersion and compilationTarget are required when forceCompilation is true"
                Verification Failed:
                  value:
                    error: "The contract is not verified or the verification is not perfect"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Database Error:
                  value:
                    error: "Database service not available"
                Internal Error:
                  value:
                    error: "Error during replacement process"